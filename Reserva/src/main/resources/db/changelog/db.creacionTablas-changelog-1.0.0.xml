<?xml version="1.0" encoding="UTF-8"?>
<!--otra forma de escribir versiones de liquibase-->
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">
    
    <changeSet id="1.0.0-creacion-de-tablas" author="julito">
        <tagDatabase tag="1.0.0-11/11/2020"/>
    </changeSet>
    
     <changeSet id="creacion-de-tabla-users" author="julito">
         <comment>creacion de la tabla users</comment>  
         <sql>
            create table users(
                id serial primary key not null,
                email varchar(100) not null,
                first_name varchar(50) not null,
                last_name varchar(50) not null,
                password varchar(100) not null,
                birthDate date not null,
                natioality varchar (100)
            );
         </sql>
    <rollback>
            DROP TABLE IF EXISTS users;
    </rollback>
    </changeSet>
    
    <changeSet id="creacion-tabla-rooms" author="julito">
         <comment>creacion de la tabla rooms</comment>  
         <sql>
            create table rooms(
                id serial primary key not null,
                name varchar(255) not null,
                price float not null,
                occupancy int not null,
                availabitlity int not null, 
                facilities varchar(255) not null
            );
         </sql>
    <rollback>
            DROP TABLE IF EXISTS rooms;
    </rollback>
    </changeSet>
    
    <changeSet id="creacion-tabla-bookins" author="julito">
         <comment>creacion de la tabla bookins</comment> 
         <sql>
            create table bookings(
                id serial primary key not null,
                check_in  date not null,
                check_out date,
                breakfast_included boolean not null,
                parking boolean not null,
                free_cancelation boolean not null,
                cost float not null,
                user_id bigint not null,
                room_id bigint not null
            );
         </sql>
    <rollback>
            DROP TABLE IF EXISTS bookings;
    </rollback>
    </changeSet>
    
    <changeSet id="creacion-de-fk-user-booking" author="julito">
        <comment>creacion de la fk_user_booking dentro de bookings con referencia a users</comment>
        <sql>
            alter table bookings add constraint fk_user_booking foreign key (user_id) references users(id) ON UPDATE CASCADE;
        </sql>
        <rollback>
            ALTER TABLE bookings drop constraint fk_user_booking;
        </rollback>
    </changeSet>
    
    <changeSet id="creacion-de-fk-room-booking" author="julito">
        <comment>creacion de fk_room_booking dentro de bookings con referencia rooms </comment>
        <sql>
            alter table bookings add constraint fk_room_booking foreign key (room_id) references rooms(id) ON UPDATE CASCADE;
        </sql>
        <rollback>
            ALTER TABLE bookings drop constraint fk_room_booking;
        </rollback>
    </changeSet>
    
    <changeSet id="creacion-tabla-cancellations" author="julito">
         <comment>creacion de la tabla cancellations</comment>
         <sql>
            create table cancellations(
                id serial primary key not null,
                created_at date not null,
                booking_id bigint not null
            );
            
         </sql>
    <rollback>
            DROP TABLE IF EXISTS cancellations;
    </rollback>
    </changeSet>
    
    <changeSet id="creacion-de-fk-booking-cancellation" author="julito">
        <comment>creacion de la fk_booking_cancellation dentro de cancellations con referencia a bookings</comment>
        <sql>
            alter table cancellations add constraint fk_booking_cancellation foreign key (booking_id) references bookings(id) ON UPDATE CASCADE;
        </sql>
        <rollback>
            alter table cancellations drop constraint fk_booking_cancellation;
        </rollback>
    </changeSet>
    
    <changeSet id="creacion-tabla-payments" author="julito">
         <comment>creacion de la tabla payments</comment>
         <sql>
            create table payments(
                id serial primary key not null,
                created_at date not null,
                booking_id bigint not null,
                card varchar(255) not null,
                card_number varchar(255) not null
            );
         </sql>
    <rollback>
            DROP TABLE IF EXISTS payments;
    </rollback>
    </changeSet>
    <changeSet id="creacion-de-fk-booking-payment" author="julito">
        <comment>creacion de la fk_booking_payment dentro de payments con referencia a bookings</comment>
        <sql>
            alter table payments add constraint fk_booking_payment foreign key (booking_id) references bookings(id) ON UPDATE CASCADE;
        </sql>
        <rollback> 
            alter table payments drop constraint fk_booking_payment;
        </rollback>
    </changeSet>
</databaseChangeLog>
